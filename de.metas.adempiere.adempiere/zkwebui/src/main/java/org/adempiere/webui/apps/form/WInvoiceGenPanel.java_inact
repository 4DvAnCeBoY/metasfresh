package org.adempiere.webui.apps.form;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyVetoException;
import java.beans.VetoableChangeListener;

import org.adempiere.exceptions.AdempiereException;
import org.adempiere.webui.component.Label;
import org.adempiere.webui.component.Listbox;
import org.adempiere.webui.component.ListboxFactory;
import org.adempiere.webui.component.Row;
import org.adempiere.webui.editor.WSearchEditor;
import org.adempiere.webui.editor.WTableDirEditor;
import org.adempiere.webui.event.ValueChangeEvent;
import org.adempiere.webui.event.ValueChangeListener;
import org.compiere.apps.form.GenForm;
import org.compiere.apps.form.IInvoiceView;
import static org.compiere.apps.form.InvoiceGen.*;
import org.compiere.apps.form.MdGenForm;
import org.compiere.apps.form.MdInvoiceGen;
import org.compiere.model.MLookup;
import org.compiere.model.MLookupFactory;
import org.compiere.model.MOrder;
import org.compiere.model.MRMA;
import org.compiere.process.DocAction;
import org.compiere.util.DisplayType;
import org.compiere.util.Env;
import org.compiere.util.KeyNamePair;
import org.compiere.util.Msg;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.Space;

public class WInvoiceGenPanel extends WGenPanel implements IInvoiceView {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4759590698702010859L;

	private Label lOrg = new Label();
	private WTableDirEditor fOrg;
	private Label lBPartner = new Label();
	private WSearchEditor fBPartner;
	private Label lDocType = new Label();
	private Listbox cmbDocType = ListboxFactory.newDropdownListbox();
	private Label lDocAction = new Label();
	private WTableDirEditor docAction;

	private final MdInvoiceGen model;

	public WInvoiceGenPanel(MdGenForm model, GenForm genForm) {
		super(model, genForm);

		this.model = (MdInvoiceGen) model;
		
		dynInit();
		zkInit();

	}

	/**
	 * Static Init.
	 * 
	 * <pre>
	 *  selPanel (tabbed)
	 *      fOrg, fBPartner
	 *      scrollPane & miniTable
	 *  genPanel
	 *      info
	 * </pre>
	 * 
	 * @throws Exception
	 */
	void zkInit() {
		lOrg.setText(Msg.translate(Env.getCtx(), "AD_Org_ID"));
		lBPartner.setText("BPartner");

		Row row = getParameterPanel().newRows().newRow();
		row.appendChild(lOrg.rightAlign());
		row.appendChild(fOrg.getComponent());
		row.appendChild(new Space());
		row.appendChild(lBPartner.rightAlign());
		row.appendChild(fBPartner.getComponent());
		row.appendChild(new Space());

		row = new Row();
		getParameterPanel().getRows().appendChild(row);
		row.appendChild(lDocType.rightAlign());
		row.appendChild(cmbDocType);
		row.appendChild(new Space());
		row.appendChild(lDocAction.rightAlign());
		row.appendChild(docAction.getComponent());
		row.appendChild(new Space());
	} // jbInit

	/**
	 * Fill Picks. Column_ID from C_Order
	 * 
	 * @throws Exception
	 *             if Lookups cannot be initialized
	 */
	public void dynInit() {

		MLookup orgL = MLookupFactory.get(Env.getCtx(), model.getWindowNo(), 0, 2163, DisplayType.TableDir);
		fOrg = new WTableDirEditor(PROP_AD_ORG_ID, false, false, true, orgL);
		// lOrg.setText(Msg.translate(Env.getCtx(), "AD_Org_ID"));

		//
		MLookup bpL = MLookupFactory.get(Env.getCtx(), model.getWindowNo(), 0, 2762, DisplayType.Search);
		fBPartner = new WSearchEditor(PROP_C_BPARTNER_ID, false, false, true, bpL);
		// lBPartner.setText(Msg.translate(Env.getCtx(), "C_BPartner_ID"));

		// Document Action Prepared/ Completed
		lDocAction.setText(Msg.translate(Env.getCtx(), "DocAction"));
		MLookup docActionL;
		try {
			docActionL = MLookupFactory.get(Env.getCtx(), model.getWindowNo(), 3495 /*
																					 * C_Invoice.
																					 * DocAction
																					 */, DisplayType.List, Env
					.getLanguage(Env.getCtx()), "DocAction", 135 /*
																 * _Document
																 * Action
																 */, false, "AD_Ref_List.Value IN ('CO','PR')");
		} catch (Exception e) {
			throw new AdempiereException(e);
		}
		docAction = new WTableDirEditor(PROP_DOC_ACTION, true, false, true, docActionL);
		docAction.setValue(DocAction.ACTION_Complete);

		// Document Type Sales Order/Vendor RMA
		lDocType.setText(Msg.translate(Env.getCtx(), "C_DocType_ID"));
		cmbDocType.addItem(new KeyNamePair(MOrder.Table_ID, Msg.translate(Env.getCtx(), "Order")));
		cmbDocType.addItem(new KeyNamePair(MRMA.Table_ID, Msg.translate(Env.getCtx(), "CustomerRMA")));
		cmbDocType.setSelectedIndex(0);

		getStatusBar().setStatusLine(Msg.getMsg(Env.getCtx(), "InvGenerateSel"));// @@
	} // fillPicks

	public void addBPartnerListener(final VetoableChangeListener l) {

		fBPartner.addValueChangeListener(new ValueChangeListener() {

			public void valueChange(final ValueChangeEvent evt) {
				firePropChange(l, "C_BPartner_ID", evt.getOldValue(), evt.getNewValue());
			}
		});
	}

	public void addDocActionListener(final VetoableChangeListener l) {

		docAction.addValueChangeListener(new ValueChangeListener() {

			public void valueChange(final ValueChangeEvent evt) {
				firePropChange(l, PROP_DOC_ACTION, evt.getOldValue(), evt.getNewValue());
			}
		});
	}

	public void addDocTypeListener(final VetoableChangeListener l) {

		cmbDocType.addActionListener(new EventListener() {

			public void onEvent(Event event) throws Exception {
				firePropChange(l, PROP_C_DOC_TYPE_ID, null, cmbDocType.getSelectedItem().toKeyNamePair());
			}
		});
	}

	private void firePropChange(final VetoableChangeListener l, final String propName, final Object oldVal,
			final Object newVal) {
		try {
			l.vetoableChange(new PropertyChangeEvent(cmbDocType, propName, oldVal, newVal));
		} catch (PropertyVetoException e1) {
			throw new AdempiereException(e1);
		}
	}

	public void addOrgListener(final VetoableChangeListener l) {

		fOrg.addValueChangeListener(new ValueChangeListener() {

			public void valueChange(final ValueChangeEvent evt) {
				firePropChange(l, PROP_AD_ORG_ID, evt.getOldValue(), evt.getNewValue());
			}
		});
	}

	public void modelPropertyChange(PropertyChangeEvent evt) {
		super.modelPropertyChange(evt);

		if (PROP_C_BPARTNER_ID.equals(evt.getPropertyName())) {

			fBPartner.setValue(model.m_C_BPartner_ID); // display value
		}
	}
}
