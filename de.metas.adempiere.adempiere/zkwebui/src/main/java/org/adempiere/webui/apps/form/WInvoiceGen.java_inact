/******************************************************************************
 * Copyright (C) 2009 Low Heng Sin                                            *
 * Copyright (C) 2009 Idalica Corporation                                     *
 * This program is free software; you can redistribute it and/or modify it    *
 * under the terms version 2 of the GNU General Public License as published   *
 * by the Free Software Foundation. This program is distributed in the hope   *
 * that it will be useful, but WITHOUT ANY WARRANTY; without even the implied *
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.           *
 * See the GNU General Public License for more details.                       *
 * You should have received a copy of the GNU General Public License along    *
 * with this program; if not, write to the Free Software Foundation, Inc.,    *
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.                     *
 *****************************************************************************/
package org.adempiere.webui.apps.form;

import java.util.ArrayList;
import java.util.EventListener;
import java.util.logging.Level;

import org.adempiere.webui.component.Label;
import org.adempiere.webui.component.Listbox;
import org.adempiere.webui.component.ListboxFactory;
import org.adempiere.webui.component.Row;
import org.adempiere.webui.component.WListbox;
import org.adempiere.webui.editor.WSearchEditor;
import org.adempiere.webui.editor.WTableDirEditor;
import org.adempiere.webui.event.ValueChangeEvent;
import org.adempiere.webui.event.ValueChangeListener;
import org.adempiere.webui.panel.ADForm;
import org.adempiere.webui.panel.IFormController;
import org.compiere.apps.form.InvoiceGen;
import org.compiere.apps.form.MdInvoiceGen;
import org.compiere.model.MLookup;
import org.compiere.model.MLookupFactory;
import org.compiere.model.MOrder;
import org.compiere.model.MRMA;
import org.compiere.process.DocAction;
import org.compiere.util.CLogger;
import org.compiere.util.DisplayType;
import org.compiere.util.Env;
import org.compiere.util.KeyNamePair;
import org.compiere.util.Msg;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zul.Space;

/**
 * Generate Invoice (manual) view class
 * 
 */
public class WInvoiceGen extends InvoiceGen implements IFormController, EventListener, ValueChangeListener {

	/** Logger */
	private static CLogger log = CLogger.getCLogger(WInOutGen.class);

	public WInvoiceGen() {
		log.info("");

		final MdInvoiceGen model = new MdInvoiceGen(0, ListboxFactory.newDataTable());

		initModel(model);

		WInvoiceGenPanel view = new WInvoiceGenPanel(getModel(), this);
		setView(view);

		Env.setContext(Env.getCtx(), view.getWindowNo(), "IsSOTrx", "Y");

		view.postQueryEvent();
		
	} // init

	/**
	 * Query Info
	 */
	public void executeQuery() {

		final MdInvoiceGen model = getModel();

		executeQuery(model.getDocTypeKNPair(), model.getMiniTable());
		model.getMiniTable().repaint();
		
		final WInvoiceGenPanel view = getView();
		view.invalidate();
	} // executeQuery

	/**
	 * Action Listener
	 * 
	 * @param e
	 *            event
	 */
	//TODO: get rid of this method
	public void onEvent(Event e) {
		log.info("Cmd=" + e.getTarget().getId());
		//
		if (cmbDocType.equals(e.getTarget())) {
			getView().postQueryEvent();
			return;
		}

		//
		validate();
	} // actionPerformed

	public void validate() {
		
		saveSelection(getModel().getMiniTable());

		ArrayList<Integer> selection = getModel().getSelection();
		if (selection != null && selection.size() > 0 && getModel().isSelectionActive())
			generate();
		else
			getView().dispose();
	}

	/**
	 * Value Change Listener - requery
	 * 
	 * @param e
	 *            event
	 */
	public void valueChange(ValueChangeEvent e) {
		
		log.info(e.getPropertyName() + "=" + e.getNewValue());

		final MdInvoiceGen model = getModel();

		if (e.getPropertyName().equals("AD_Org_ID"))
			model.m_AD_Org_ID = e.getNewValue();
		if (e.getPropertyName().equals("C_BPartner_ID")) {
			model.m_C_BPartner_ID = e.getNewValue();
		}

		final WInvoiceGenPanel view = getView();
		view.postQueryEvent();
	} // vetoableChange

	/**************************************************************************
	 * Generate Shipments
	 */
	public String generate() {
		final MdInvoiceGen model = getModel();

		final WInvoiceGenPanel view = getView();
		return generate(view.getStatusBar(), model.getDocTypeKNPair(), model.getDocActionSelected());
	} // generateShipments

	public ADForm getForm() {
		
		final WInvoiceGenPanel view = getView();
		return view;
	}
}