<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>de.metas</groupId>
		<artifactId>de.metas.parent</artifactId>
		<version>1.0_IT-SNAPSHOT</version>
		<relativePath>../de.metas.parent/pom.xml</relativePath>
	</parent>

	<groupId>de.metas.jax.rs</groupId>
	<artifactId>de.metas.jax.rs</artifactId>

	<properties>
		<!-- these is also the spring version from the dependency tree of camel-2.16.1 -->
		<spring.version>4.1.8.RELEASE</spring.version>

		<migration-sql-basedir></migration-sql-basedir>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-jms</artifactId>
			<version>${metasfresh.cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${metasfresh.cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http-jetty</artifactId>
			<version>${metasfresh.cxf.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${metasfresh.cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-client</artifactId>
			<version>${metasfresh.cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-extension-providers</artifactId>
			<version>${metasfresh.cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
		</dependency>

		<dependency>
			<groupId>de.metas.adempiere.adempiere</groupId>
			<artifactId>de.metas.adempiere.adempiere.base</artifactId>
		</dependency>

		<dependency>
			<groupId>de.metas.util</groupId>
			<artifactId>de.metas.util</artifactId>
		</dependency>
		
		<!--
We currently don't use spring in this module! 
There is just a test class which kind of demonstrates how a cxf endpoint would be used in string.
I don't (yet?) want to let go of that test, because it might be useful in the future, 
so I'm leaving the test itself and theses dependencies, with scope=test
-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>

	</dependencies>


	<dependencyManagement>
		<dependencies>
            <!-- 
            Pull in the cxf-parents as import scope to re-use the dependenecyManagement 
            sections of those poms.   Those sections define the versions of various third
            party deps that CXF used to build with and test with and we would like
            to make sure the same versions are used for the samples
            -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-parent</artifactId>
				<version>${metasfresh.cxf.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf</artifactId>
				<version>${metasfresh.cxf.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

</project>
