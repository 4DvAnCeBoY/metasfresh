<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>de.metas.parent</artifactId>
		<groupId>de.metas</groupId>
		<version>1.0.0</version>
		<relativePath>../de.metas.parent/pom.xml</relativePath>
	</parent>
	
	<groupId>de.metas.material</groupId>
	<artifactId>metasfresh-material-planning</artifactId>
	<packaging>jar</packaging>

	<description>This componend shall leverage the libero code to generate production and dsitribution suggestions for the material-dispo service
Not sure if this shall be a dedicated service..it depends on how well we will be able to cope with having more and more of them.</description>

	<dependencies>
	
		<!-- metasfresh -->
		<dependency>
			<groupId>de.metas.util</groupId>
			<artifactId>de.metas.util</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>de.metas.adempiere.adempiere</groupId>
			<artifactId>de.metas.adempiere.adempiere.base</artifactId>
			<version>1.0.0</version>
		</dependency>
		
		<dependency>
			<groupId>de.metas.material</groupId>
			<artifactId>metasfresh-material-event</artifactId>
			<version>1.0.0</version>
		</dependency>

		<!--
			Lombok
			See https://github.com/metasfresh/metasfresh/issues/1125
			NOTE: if you don't need fancy things like @SneakyThrows then scope 'provided' it's totally fine
			Also note that the version is managed by spring-boot.
		 -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

	</dependencies>

</project>